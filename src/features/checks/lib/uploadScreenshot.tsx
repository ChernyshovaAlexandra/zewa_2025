import jsQR from 'jsqr';
import { parseReceipt } from './parseReceipt';
import { showModal } from './showModal';

export async function uploadScreenshot(file: File) {
  showModal('–ú–∏–Ω—É—Ç–∫—É', '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ–∫ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –≠—Ç–æ –∑–∞–π–º–µ—Ç –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è.');

  const bitmap = await createImageBitmap(file);
  const canvas = document.createElement('canvas');
  canvas.width = bitmap.width;
  canvas.height = bitmap.height;
  const ctx = canvas.getContext('2d');
  if (!ctx) {
    showModal('–ß–µ–∫ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.', true);
    return;
  }
  ctx.drawImage(bitmap, 0, 0);
  const { data, width, height } = ctx.getImageData(0, 0, canvas.width, canvas.height);
  const code = jsQR(new Uint8ClampedArray(data), width, height);

  if (!code) {
    showModal(
      '–ß–µ–∫ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω',
      'QR-–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.',
      true,
    );
    return;
  }

  showModal(
    '–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ–∫–∞',
    '–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —á–µ–∫, –Ω–∞—á–∏—Å–ª–∏–º –≤–∞–º –º–æ–Ω–µ—Ç—ã –∏ –ø—Ä–∏—à–ª—ë–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —ç—Ç–æ–º.',
  );

  try {
    parseReceipt(code.data);
    showModal(
      '–ß–µ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω',
      '–í–∞—à —á–µ–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –í –Ω—ë–º –µ—Å—Ç—å —Ç–æ–≤–∞—Ä –±—Ä–µ–Ω–¥–∞ ZEWA. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –≤ –Ω–∞–≥—Ä–∞–¥—É –•–• –º–æ–Ω–µ—Ç. –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª—å—à–µ –º–æ–Ω–µ—Ç –∏–≥—Ä–∞–π—Ç–µ –≤ –∏–≥—Ä—É. –£–¥–∞—á–∏!',
      true,
    );
  } catch {
    showModal(
      '–ß–µ–∫ –ø—Ä–æ–≤–µ—Ä–µ–Ω',
      'üòï –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à —á–µ–∫ –Ω–µ –ø—Ä–æ—à—ë–ª –º–æ–¥–µ—Ä–∞—Ü–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.',
      true,
    );
  }
}
